# -*- coding: utf-8 -*-
"""youtube_api.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bZqLoko3sql8FNxs6jwrHbCERxjrs_pV
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud
import streamlit as st
from utils import get_channel_stats, get_comments_in_videos, get_video_ids, get_video_details, preprocess_df

st.title('''
         YOUTUBE API ANALYSIS
         #### Enter the channel ID and playlist ID to show the complete analysis and visualisation of the channels videos.
         ''')
channel_id = st.text_input("Enter channel ID",'UCijULR2sXLutCRBtW3_WEfA')
playlist_id = st.text_input("Enter palylist ID",'PLmNaKWy1cIoGEFew0LF-Vzj3TR_jXwjoi')

channel_df = get_channel_stats(channel_id)
st.write(channel_df)

video_ids = get_video_ids(playlist_id)
video_df = get_video_details(video_ids)
st.write(video_df)

comments_df = get_comments_in_videos(video_ids)
st.write(comments_df)

video_df = preprocess_df(video_df)

#plot the analysis
ax = sns.barplot(x = 'title', y = 'viewCount', data = video_df.sort_values('viewCount', ascending = False)[:9])
plot = ax.set_xticklabels(ax.get_xticklabels(), rotation = 90)
st.write(plot)

fig, ax = plt.subplots(1,2)
sns.scatterplot(data = video_df, x = 'likeCount', y = 'viewCount', ax = ax[0])
sns.scatterplot( data = video_df, x = 'commentCount', y = 'viewCount', ax = ax[1])
st.write(fig)

ff = sns.histplot(data = video_df, x = 'durationSecs', bins=30)
st.write(ff)

weekdays = [ 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
day_df = pd.DataFrame(video_df['publishedDay'].value_counts())
day_df = day_df.reindex(weekdays)
ax = day_df.reset_index().plot.bar(x='index', y='publishedDay', rot=0)
st.write(ax)

all_words = list([a for b in video_df['title_no_stopwords'].tolist() for a in b])
all_words_str = ' '.join(all_words)

def plot_cloud(wordcloud):
    fig1 = plt.figure(figsize=(30, 20))
    plt.imshow(wordcloud)
    plt.axis("off");
    st.write(fig1)

wordcloud = WordCloud(width = 2000, height = 1000, random_state=1, background_color='black',
                      colormap='viridis', collocations=False).generate(all_words_str)
plot_cloud(wordcloud)